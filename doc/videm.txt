*videm.txt*                   Vim's IDE Mode

                       _   _______ ____  _______   _~
                      | | / /_  _// __ \/ ____/ | / |~
                      | |/ / / / / / / / __/ /  |/  |~
                      | / /_/ /_/ /_/ / /___/ /|  | |~
                      |__/_____/_____/_____/_/ |_/|_|~

                                                    by fanhe <fanhed@163.com>~

                            Videm User Manual
==============================================================================
CONTENTS                                *Videm-Contents*

1. Introduction                         |Videm-Introduction|
2. Prerequisites                        |Videm-Prerequisites|
3. Installation                         |Videm-Installation|
4. Project Manager                      |Videm-ProjectManager|
    4.1. KeyBindings                    |Videm-ProjectManager-KeyBindings|
    4.2. Commands                       |Videm-ProjectManager-Commands|
5. Options                              |Videm-Options|
    5.1. Project Manager Options        |Videm-Options-ProjectManager|
6. Tips                                 |Videm-Tips|
    6.1. Use cl.exe On Windows          |Videm-Windows|
    6.2. Trouble Shooting               |Videm-TroubleShooting|
7. Limitation                           |Videm-Limitation|

==============================================================================
1. Introduction                         *Videm-Introduction*

Videm is an intuitive C/C++ project manager which can works like IDE.
Videm only provides project manager and some APIs, other features will be
provided by other plugins.

==============================================================================
2. Prerequisites                        *Videm-Prerequisites*

Make sure your vim's version is 8.1 or later and compile with this features: >
    +python3
    +terminal
<
Videm depends on following software: >
    python3
    python-lxml (optional)
    make
    gcc
    gdb
<
And make sure you have these settings in your vimrc file: >
    set nocp
    filetype plugin on
    syntax on
<
==============================================================================
3. Installation                         *Videm-Installation*

For vim-plug >
    Plug 'epheien/termdbg'

For manual installation
    - Extract the files and put them in your .vim directory  
      (usually `~/.vim`).

==============================================================================
4. Project Manager                      *Videm-ProjectManager*

Workspaces and Projects~

One workspace holds a number of projects, for instance, various pieces of a
large design. Create a workspace by selecting "New Workspace..." on workspace
popup menu (The popup menu when the cursor in workspace line).

A project is one piece of a large design within that workspace. Create a
project by selecting 'Create a New Project' on workspace popup menu. Please
create a worksapce before do this.

For instance, one project might be a DLL, another project could be a static
library, and yet another project could be a GUI design which would be
eventually integrated together in one workspace to be released as a piece of
software. All these projects could be part of one workspace.

The project itself contains all information it needs to produce its own output
piece of the overall software.

Also, a project contains no information about the workspace, and thus one
project can be part of multiple workspaces. The workspace holds pointers to
the projects which are members of that workspace.

The workspace information file is <workspace-name>.vworkspace.

The project information file is <project-name>.vproject.

Configurations~

Each project has at least two build configurations: Debug and Release. In
practice you can have many more configurations. You can select what
configuration the project is using by selecting 'Settings...' on project popup
menu.

This information is global among all the projects in the workspace and so is
kept in the workspace information file. This means all projects be in the same
configuration in a workspace.


NOTE: Almost all commands are listed in popup menu, please read help info
      around.

------------------------------------------------------------------------------
4.1. KeyBindings                        *Videm-ProjectManager-KeyBindings*

Press <F1> in workspace buffer for quick help information.

    Key             Description             Option~
------------------------------------------------------------------------------
    <2-LeftMouse>   Fold / expand node
    <CR>            Same as <2-LeftMouse>
    o               Same as <2-LeftMouse>   |videm.wsp.keybind.OpenNode|
    go              Preview file            |videm.wsp.keybind.OpenNode2|
    t               Open file in new tab    |videm.wsp.keybind.OpenNodeNewTab|
    T               Open file in new tab silently
                                            |videm.wsp.keybind.OpenNodeNewTab2|
    i               Open file split         |videm.wsp.keybind.OpenNodeSplit|
    gi              Preview file split      |videm.wsp.keybind.OpenNodeSplit2|
    s               Open file vsplit        |videm.wsp.keybind.OpenNodeVSplit|
    gs              Preview file vsplit     |videm.wsp.keybind.OpenNodeVSplit2|
    p               Go to parent node       |videm.wsp.keybind.GotoParent|
    P               Go to root node         |videm.wsp.keybind.GotoRoot|
    <C-n>           Go to next sibling node |videm.wsp.keybind.GotoNextSibling|
    <C-p>           Go to prev sibling node |videm.wsp.keybind.GotoPrevSibling|
    .               Show text menu          |videm.wsp.keybind.ShowMenu|
    <RightRelease>  Popup gui menu          |videm.wsp.keybind.PopupMenu|
    R               Refresh buffer          |videm.wsp.keybind.RefreshBuffer|
    dd              Cut one node            |videm.wsp.keybind.CutOneNode|
    d               Cut node (visual mode)  |videm.wsp.keybind.CutNodes|
    <C-v>           Paste nodes             |videm.wsp.keybind.PasteNodes|
    <F1>            Toggle quick help info  |videm.wsp.keybind.ToggleHelpInfo|

------------------------------------------------------------------------------
4.2. Commands                           *Videm-ProjectManager-Commands*

    VidemOpen [workspace-file]          Open a workspace file or default
                                        workspace. If without specify a
                                        workspace file and Videm had
                                        started, the command will open the
                                        current workspace.

    VBuildActiveProject                 Build active projcet.

    VCleanActiveProject                 Clean active project.

    VRunActiveProject                   Run active project.

    VBuildAndRunActiveProject           Build active project and run if build
                                        successfully.

    VSwapSourceHeader                   Toggle editing source and header

    VLocateCurrentFile                  Locate editing file in the worksapce
                                        buffer.

    VFindFiles [name]                   Find workspace files

    VFindFilesIC [name]                 Find workspace files with ignore case
                                        sensitive

    VOpenIncludeFile                    Open included file when locates the
                                        cursor in '#include' line.

    VEnvVarSetttings                    Open 'Environment Variables Setting'
                                        dialog.

    VCompilersSettings                  Open 'Compilers Settings' dialog.

    VBuildersSettings                   Open 'Builders Settings' dialog.

    VPlugInfo                           Show the information of Videm's
                                        plugins.

==============================================================================
5. Options                              *Videm-Options*

Right hand side is the default value, you can modify other values for the same
type. If type of the right hand side value is integer, 0 for False, non-zero
for True. 

Example: >
    let g:videm_user_options = {
        \ 'videm.wsp.ShowBriefHelp'     : 0,
        \ 'videm.wsp.SaveBeforeBuild'   : 1,
    \ }

------------------------------------------------------------------------------
5.1. Project Manager Options            *Videm-Options-ProjectManager*

*videm.wsp.ShowBriefHelp*              number (default 1)
    If set to 1, Videm will display a brief help in workspace buffer.

*videm.wsp.EnablePopUpMenu*            number (default 1)
    If set to 1, Videm will display some items for Symbol Database in
    |popup-menu| menu.

*videm.wsp.WinSize*                    number (default 30)
    Workspace window width.

*videm.wsp.BufName*                    string (default "== VidemWorkspace ==")
    Set the wrokspace buffer name.

*videm.wsp.HlCursorLine*               number (default 1)
    Highlight the workspace buffer cursor line.

*videm.wsp.LinkToEditor*               number (default 0)
    If not 0, when the curser put on one source file buffer, the cursor of
    worksapce buffer's cursor will go the the corresponding source file line.

*videm.wsp.EnableMenuBar*              number (default 1)
    Will install a menu named 'Videm'.

*videm.wsp.EnableToolBar*              number (default 1)
    Will install some toolbar icons.

*videm.wsp.HlSourceFile*               number (default 1)
    Highlight the .h/.hpp and .c/.cpp file.

*videm.wsp.ShowWspName*                number (default 1)
    Insert worksapce name into title.

*videm.wsp.SaveBeforeBuild*            number (default 0)
    Auto save all modified files before build projects.

*videm.wsp.ActProjHlGroup*             string (default "SpecialKey")
    The active project highlight group name.

*videm.wsp.AutoSession*                number (default 0)
    If set to 1, Videm will save or load session of workspace automatically.

*videm.wsp.CodeCompleteEngine*         string (default "omnicpp")
    Setup code complete engine, built-in available values are "none",
    "omnicpp" and "vimccc",

*videm.wsp.SymbolDatabase*             string (default "cscope")
    Symbol Database, valid values are "none", "cscope", "gtags".
    This option is only available once before starting Videm.
    NOTE: Cscope will not update symbol database automatically but GNU global
          do, when Videm just connect a valid symbol database
    NOTE: GNU global has a bug when a directory is a symbol link, so if you use
          symbol links in your project, do _NOT_ use GNU global.

*videm.symdb.Quickfix*                 number (default 1)
    If set to 1, Videm will open quifix window after searching symbol from
    symbol database if necessary.

*videm.symdb.cscope.Program*           string (default &cscopeprg)
    Cscope progam path, you can specify another value such as /usr/local/cscope

*videm.symdb.cscope.IncExtHdr*         number (default 1)
    If not 0, Videm will pass all project's include search paths to cscope, so
    cscope will generate a datebase which contains all headers.

*videm.symdb.cscope.GenInvIdx*         number (default 0)
    Enable fast symbol lookup via an inverted index. This option causes cscope
    to create 2 more files ('<name>.in.out'' and '<name>.po.out') in addition
    to the normal database. This allows a faster symbol search algorithm that
    provides noticeably faster lookup performance for large projects.

*videm.symdb.gtags.Program*            string (default "gtags")
    GNU global configuration, you can read their manual for help.

*videm.symdb.gtags.CscopeProg*         string (default "gtags-cscope")
    GNU global configuration, you can read their manual for help.

*videm.wsp.keybind.OpenNode*           string (default "o")
    If workspace node is selected, a build config menu will be shown.

*videm.wsp.keybind.OpenNode2*          string (default "go")

*videm.wsp.keybind.OpenNodeNewTab*     string (default "t")

*videm.wsp.keybind.OpenNodeNewTab2*    string (default "T")

*videm.wsp.keybind.OpenNodeSplit*      string (default "i")

*videm.wsp.keybind.OpenNodeSplit2*     string (default "gi")

*videm.wsp.keybind.OpenNodeVSplit*     string (default "s")

*videm.wsp.keybind.OpenNodeVSplit2*    string (default "gs")

*videm.wsp.keybind.GotoParent*         string (default "p")

*videm.wsp.keybind.GotoRoot*           string (default "P")

*videm.wsp.keybind.GotoNextSibling*    string (default "<C-n>")

*videm.wsp.keybind.GotoPrevSibling*    string (default "<C-p>")

*videm.wsp.keybind.ShowMenu*           string (default ".")
    The key to popup general menu.
*videm.wsp.keybind.PopupMenu*          string (default "<RightRelease>")
    The key to popup gui menu.

*videm.wsp.keybind.RefreshBuffer*      string (default "R")

*videm.wsp.keybind.CutOneNode*         string (default "dd")

*videm.wsp.keybind.CutNodes*           string (default "d")

*videm.wsp.keybind.PasteNodes*         string (default "<C-v>")

*videm.wsp.keybind.ToggleHelpInfo*     string (default "<F1>")
    The key to toggle help info.

==============================================================================
6. Tips                                 *Videm-Tips*
------------------------------------------------------------------------------
6.1. Use cl.exe On Windows              *Videm-Windows*

NOTE: This have not been test currently.

Run :VCompilersSettings to open settings dialog, select VC++ compiler and
set 'Environment Setup Command:' to following (I have installed VS 2010 in
                                               'D:\Program Files' folder): >
    "D:\Program Files\Microsoft Visual Studio 10.0\Common7\Tools\vsvars32.bat"

And then you can use cl.exe in project, just select 'VC++' compiler.

NOTE: Currently, OmniCpp of Videm can not support code completion with
      headers of Visual Studio, use VIMCCC instead.
NOTE: Compile the program with cl.exe, this implies that Videm can not debug
      the program with gdb, use windbg instead.

------------------------------------------------------------------------------
6.2. Trouble Shooting                   *Videm-TroubleShooting*

    Q: Why my customize options not work? ~
    A: If you use pathogen plugin, make sure run 'call pathogen#infect()'
       before setting any Videm option in your .vimrc file.

    Q: Why I press <C-x><C-s> to save and quit window and it does not work? ~
    A: You seem to use vim in a terminal, so <C-s> is bind to stop drawing the
       screen, you can run 'stty -ixon' in terminal to disable this terminal
       keybinding, or you can set 'let g:VimDialogSaveAndQuitKey = "<C-x>s"'
       to change vimdialog keybinding. The same issue as "Save" action, it's
       option name is 'g:VimDialogSaveKey'.

==============================================================================
7. Limitation                           *Videm-Limitation*
------------------------------------------------------------------------------
On Windows, a general file and path which pattern is '[A-Za-z0-9_\-+.]\+' are
supported only. Any special file and path name will cause some problems.

On Linux, special file and path name are partially supported, but the debugger
only supports general file and path name.

Generally, a general file or path name is strongly recommended.

------------------------------------------------------------------------------
vim:tw=78:ft=help:norl:et:ts=4:sw=4:sts=4
